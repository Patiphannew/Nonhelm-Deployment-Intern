apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: "dpage/pgadmin4"
          imagePullPolicy: IfNotPresent
          # envFrom:
          #   - configMapRef:
          #       name: pgadmin
          env:
            - name: PGADMIN_DEFAULT_PASSWORD
              value: "appman"
            - name: PGADMIN_DEFAULT_EMAIL
              value: "supphakit.t@appman.co.th"
            - name: SCRIPT_NAME
              value: /pgadmin
              # valueFrom:
              #   secretKeyRef:
              #     name: pgadmin
              #     key: pgadmin-password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          # volumeMounts:
          #   - name: pgadmin-data
          #     mountPath: /var/lib/pgadmin
      # volumes:
      #   - name: pgadmin-data
      #     persistentVolumeClaim:
      #       claimName: pgadmin

---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  type: ClusterIP
  ports:
    - port: 80
  selector:
    app: pgadmin

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-pgadmin
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.org/rewrites: "serviceName=pgadmin rewrite=/pgadmin"

spec:
  rules:
    - host: newnlb-2acfd26c77b64b7b.elb.ap-southeast-1.amazonaws.com
      http:
        paths:
          - path: /pgadmin
            pathType: Exact
            backend:
              serviceName: pgadmin
              servicePort: 80